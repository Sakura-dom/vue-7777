import{z as R}from"./vendor.f0b6f500.js";var v,b=new Uint8Array(16);function q(){if(!v&&(v=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!v))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return v(b)}var V=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function k(e){return typeof e=="string"&&V.test(e)}var n=[];for(var g=0;g<256;++g)n.push((g+256).toString(16).substr(1));function C(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,o=(n[e[t+0]]+n[e[t+1]]+n[e[t+2]]+n[e[t+3]]+"-"+n[e[t+4]]+n[e[t+5]]+"-"+n[e[t+6]]+n[e[t+7]]+"-"+n[e[t+8]]+n[e[t+9]]+"-"+n[e[t+10]]+n[e[t+11]]+n[e[t+12]]+n[e[t+13]]+n[e[t+14]]+n[e[t+15]]).toLowerCase();if(!k(o))throw TypeError("Stringified UUID is invalid");return o}var w,p,x=0,h=0;function E(e,t,o){var a=t&&o||0,f=t||new Array(16);e=e||{};var i=e.node||w,r=e.clockseq!==void 0?e.clockseq:p;if(i==null||r==null){var u=e.random||(e.rng||q)();i==null&&(i=w=[u[0]|1,u[1],u[2],u[3],u[4],u[5]]),r==null&&(r=p=(u[6]<<8|u[7])&16383)}var s=e.msecs!==void 0?e.msecs:Date.now(),c=e.nsecs!==void 0?e.nsecs:h+1,y=s-x+(c-h)/1e4;if(y<0&&e.clockseq===void 0&&(r=r+1&16383),(y<0||s>x)&&e.nsecs===void 0&&(c=0),c>=1e4)throw new Error("uuid.v1(): Can't create more than 10M uuids/sec");x=s,h=c,p=r,s+=122192928e5;var d=((s&268435455)*1e4+c)%4294967296;f[a++]=d>>>24&255,f[a++]=d>>>16&255,f[a++]=d>>>8&255,f[a++]=d&255;var l=s/4294967296*1e4&268435455;f[a++]=l>>>8&255,f[a++]=l&255,f[a++]=l>>>24&15|16,f[a++]=l>>>16&255,f[a++]=r>>>8|128,f[a++]=r&255;for(var m=0;m<6;++m)f[a+m]=i[m];return t||C(f)}const S=e=>new Promise((t,o)=>{let a=new FileReader;a.readAsDataURL(e),a.onload=function(f){let i=f.target.result.split(",")[1];t(i)}}),U=(e,t)=>{const o=`https://api.github.com/repos/huifendeyu/pictureBed/contents/img/${e}`;return R({url:o,method:"put",headers:{Accept:"application/vnd.github.v3+json",Authorization:"token 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"},data:{message:"uploadImage",committer:{name:"zhangpan",email:"1571112770@qq.com"},content:t}})};export{S as g,U as u,E as v};
